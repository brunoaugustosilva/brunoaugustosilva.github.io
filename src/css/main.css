.card {
  border-radius: 4px; }
  .card__title {
    text-align: center;
    font-size: ms; }

/*animations here*/
@-webkit-keyframes opacity {
  from {
    opacity: 0; }
  to {
    opacity: 1; } }
@keyframes opacity {
  from {
    opacity: 0; }
  to {
    opacity: 1; } }

/*Open-sans*/
@font-face {
  font-family: 'Open Sans Light';
  src: fonts("Open_sans/OpenSans-Light.ttf"); }

@font-face {
  font-family: 'Open Sans Light Italic';
  src: fonts("Open_sans/OpenSans-LightItalic.ttf"); }

@font-face {
  font-family: 'Open Sans Italic';
  src: fonts("Open_sans/OpenSans-Italic.ttf"); }

@font-face {
  font-family: 'Open Sans Regular';
  src: fonts("Open_sans/OpenSans-Regular.ttf"); }

@font-face {
  font-family: 'Open Sans Semi Bold';
  src: fonts("Open_sans/OpenSans-SemiBold.ttf"); }

@font-face {
  font-family: 'Open Sans Semi Bold Italic';
  src: fonts("Open_sans/OpenSans-SemiBoldItalic.ttf"); }

@font-face {
  font-family: 'Open Sans Bold';
  src: fonts("Open_sans/OpenSans-Bold.ttf"); }

@font-face {
  font-family: 'Open Sans Bold Italic';
  src: fonts("Open_sans/OpenSans-BoldITalic.ttf"); }

@font-face {
  font-family: 'Open Sans ExtraBold';
  src: fonts("Open_sans/OpenSans-ExtraBold.ttf"); }

@font-face {
  font-family: 'Open Sans ExtraBold Italic';
  src: fonts("Open_sans/OpenSans-ExtraBoldItalic.ttf"); }

/*roboto slab*/
@font-face {
  font-family: 'Roboto Slab Light';
  src: fonts("Roboto_Slab/RobotoSlab-Light.ttf"); }

@font-face {
  font-family: 'Roboto Slab Thin';
  src: fonts("Roboto_Slab/RobotoSlab-Thin.ttf"); }

@font-face {
  font-family: 'Roboto Slab Regular';
  src: fonts("Roboto_Slab/RobotoSlab-Regular.ttf"); }

@font-face {
  font-family: 'Roboto Slab Bold';
  src: fonts("Roboto_Slab/RobotoSlab-Bold.ttf"); }

/*bruno icons*/
@font-face {
  font-family: 'Bruno Icons';
  font-weight: normal;
  font-style: normal;
  src: fonts("Bruno_Icons/Bruno-Icons.eot");
  src: fonts("Bruno_Icons/Bruno-Icons.eot?#iefix") format("embedded-opentype"), fonts("Bruno_Icons/Bruno-Icons.woff") format("woff"), fonts("Bruno_Icons/Bruno-Icons.ttf") format("truetype"), fonts("Bruno_Icons/Bruno-Icons.svg#Bruno-Icons") format("svg"); }

html {
  -webkit-box-sizing: border-box;
  box-sizing: border-box; }

body {
  background-color: #51802d; }

/**
 * Make all elements from the DOM inherit from the parent box-sizing
 * Since `*` has a specificity of 0, it does not override the `html` value
 * making all elements inheriting from the root box-sizing value
 * See: https://css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice/
 */
*,
*::before,
*::after {
  -webkit-box-sizing: inherit;
  box-sizing: inherit; }

a {
  padding: 12px 16px;
  text-decoration: none;
  color: #dce6d5; }
  a:hover, a:active, a:focus {
    color: #101a09; }

ul {
  margin: 0;
  padding: 0; }

/**
*   Basic typography style for copy text
*/
body {
  font: 12px "Open Sans", "Open Sans Regular", "Open Sans Light", "Arial", sans-serif;
  color: #dce6d5;
  line-height: 1.6; }

h1, h2, h3, h4, h5,
h6 {
  font-family: "Roboto Slab", "Roboto Slab Bold", "Roboto Slab Regular", "Courier New", serif !important; }

h1 {
  font-size: 31.41509px !important; }

h2 {
  font-size: 19.416px !important; }

h3 {
  font-size: 31.41509px !important; }

h4 {
  font-size: 31.41509px !important; }

h5 {
  font-size: 31.41509px !important; }

h6 {
  font-size: 31.41509px !important; }

h7 {
  font-size: 31.41509px !important; }

.Bicons {
  font-family: "Bruno-Icons"; }

.carrousel {
  display: grid;
  overflow-y: auto;
  grid-template-columns: repeat(2, 95%); }

.article {
  z-index: 3;
  background: #51802d;
  -webkit-transition: all 0.5s ease-in;
  transition: all 0.5s ease-in; }
  .article:target {
    -webkit-animation: opacity 1s;
    animation: opacity 1s; }
  .article__title {
    text-align: center;
    margin-top: 70px; }
  .article__content {
    text-align: justify;
    padding: 8px 12px;
    line-height: 1.5;
    text-indent: 5%; }
  .article--white {
    color: #51802d;
    background: #dce6d5; }

/**
*/
.footer {
  text-align: center;
  color: #51802d;
  background-color: #dce6d5; }

.main {
  display: grid;
  grid-template-rows: 100px 500vmax 50px; }
  @media (min-width: 1024px) {
    .main {
      grid-template-rows: 100px 500vmin 50px; } }

.section {
  display: grid;
  grid-template-rows: repeat(5, 100vmax); }
  @media (min-width: 1024px) {
    .section {
      grid-template-rows: repeat(5, 100vmin); } }

.header {
  font-weight: bolder;
  background: #51802d;
  position: -webkit-sticky;
  position: sticky;
  z-index: 5;
  top: -95px;
  -webkit-transition: all .5s ease-in-out;
  transition: all .5s ease-in-out;
  display: grid;
  -webkit-box-shadow: 0 1px 5px #51802d;
  box-shadow: 0 1px 5px #51802d; }
  .header__title {
    background: #51802d;
    text-align: center; }
  .header__menu {
    background: #51802d;
    font-size: 19.416px; }
    .header__menu__nav ul {
      display: grid;
      -webkit-box-pack: stretch;
      -ms-flex-pack: stretch;
      justify-content: stretch;
      grid-template-columns: repeat(5, 1fr); }
      .header__menu__nav ul li {
        list-style: none;
        text-align: center; }
        .header__menu__nav ul li a {
          display: block;
          -webkit-transition: all .5s ease-in;
          transition: all .5s ease-in; }

/*! normalize.css v8.0.0 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/* Sections
     ========================================================================== */
/**
   * Remove the margin in all browsers.
   */
body {
  margin: 0; }

/**
   * Correct the font size and margin on `h1` elements within `section` and
   * `article` contexts in Chrome, Firefox, and Safari.
   */
h1 {
  font-size: 2em;
  margin: .67em 0; }

/* Grouping content
     ========================================================================== */
/**
   * 1. Add the correct box sizing in Firefox.
   * 2. Show the overflow in Edge and IE.
   */
hr {
  overflow: visible;
  /* 2 */
  -webkit-box-sizing: content-box;
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */ }

/**
   * 1. Correct the inheritance and scaling of font size in all browsers.
   * 2. Correct the odd `em` font sizing in all browsers.
   */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/* Text-level semantics
     ========================================================================== */
/**
   * Remove the gray background on active links in IE 10.
   */
a {
  background-color: transparent; }

/**
   * 1. Remove the bottom border in Chrome 57-
   * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
   */
abbr[title] {
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
  text-decoration: underline dotted;
  /* 2 */
  border-bottom: none;
  /* 1 */ }

/**
   * Add the correct font weight in Chrome, Edge, and Safari.
   */
b,
strong {
  font-weight: bolder; }

/**
   * 1. Correct the inheritance and scaling of font size in all browsers.
   * 2. Correct the odd `em` font sizing in all browsers.
   */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
   * Add the correct font size in all browsers.
   */
small {
  font-size: 80%; }

/**
   * Prevent `sub` and `sup` elements from affecting the line height in
   * all browsers.
   */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -.25em; }

sup {
  top: -.5em; }

/* Embedded content
     ========================================================================== */
/**
   * Remove the border on images inside links in IE 10.
   */
img {
  border-style: none; }

/* Forms
     ========================================================================== */
/**
   * 1. Change the font styles in all browsers.
   * 2. Remove the margin in Firefox and Safari.
   */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
   * Show the overflow in IE.
   * 1. Show the overflow in Edge.
   */
button,
input {
  /* 1 */
  overflow: visible; }

/**
   * Remove the inheritance of text transform in Edge, Firefox, and IE.
   * 1. Remove the inheritance of text transform in Firefox.
   */
button,
select {
  /* 1 */
  text-transform: none; }

/**
   * Correct the inability to style clickable types in iOS and Safari.
   */
button,
[type='button'],
[type='reset'],
[type='submit'] {
  -webkit-appearance: button; }

/**
   * Remove the inner border and padding in Firefox.
   */
button::-moz-focus-inner,
[type='button']::-moz-focus-inner,
[type='reset']::-moz-focus-inner,
[type='submit']::-moz-focus-inner {
  padding: 0;
  border-style: none; }

/**
   * Restore the focus styles unset by the previous rule.
   */
button:-moz-focusring,
[type='button']:-moz-focusring,
[type='reset']:-moz-focusring,
[type='submit']:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
   * Correct the padding in Firefox.
   */
fieldset {
  padding: .35em .75em .625em; }

/**
   * 1. Correct the text wrapping in Edge and IE.
   * 2. Correct the color inheritance from `fieldset` elements in IE.
   * 3. Remove the padding so developers are not caught out when they zero out
   *    `fieldset` elements in all browsers.
   */
legend {
  display: table;
  /* 1 */
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */
  color: inherit;
  /* 2 */ }

/**
   * Add the correct vertical alignment in Chrome, Firefox, and Opera.
   */
progress {
  vertical-align: baseline; }

/**
   * Remove the default vertical scrollbar in IE 10+.
   */
textarea {
  overflow: auto; }

/**
   * 1. Add the correct box sizing in IE 10.
   * 2. Remove the padding in IE 10.
   */
[type='checkbox'],
[type='radio'] {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
   * Correct the cursor style of increment and decrement buttons in Chrome.
   */
[type='number']::-webkit-inner-spin-button,
[type='number']::-webkit-outer-spin-button {
  height: auto; }

/**
   * 1. Correct the odd appearance in Chrome and Safari.
   * 2. Correct the outline style in Safari.
   */
[type='search'] {
  outline-offset: -2px;
  /* 2 */
  -webkit-appearance: textfield;
  /* 1 */ }

/**
   * Remove the inner padding in Chrome and Safari on macOS.
   */
[type='search']::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
   * 1. Correct the inability to style clickable types in iOS and Safari.
   * 2. Change font properties to `inherit` in Safari.
   */
::-webkit-file-upload-button {
  font: inherit;
  /* 2 */
  -webkit-appearance: button;
  /* 1 */ }

/* Interactive
     ========================================================================== */
/*
   * Add the correct display in Edge, IE 10+, and Firefox.
   */
details {
  display: block; }

/*
   * Add the correct display in all browsers.
   */
summary {
  display: list-item; }

/* Misc
     ========================================================================== */
/**
   * Add the correct display in IE 10+.
   */
template {
  display: none; }

/**
   * Add the correct display in IE 10.
   */
[hidden] {
  display: none; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
